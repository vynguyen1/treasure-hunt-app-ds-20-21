# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Does a static analysis of the project. Configure the options in .swiftlint.yml"
  lane :lint do
  	swiftlint(
  		mode: :lint,
  		output_file: 'sonar-reports/swiftlint.txt',
   		config_file: 'fastlane/.swiftlint.yml'
  	)
  end
  
  desc "Test the application. Configure options in fastlane/Scanfile"
  lane :test_app do |options|
    publish_reports = options[:publish_reports]
    scan
    if publish_reports
      publish_reports_to_sonar
    end 
  end
  
  desc "Publish the application reports to sonar"
  private_lane :publish_reports_to_sonar do
  
    # Run slather to generate code coverage
    slather(proj: "TreasureHuntApp.xcodeproj", 
      #workspace: "TreasureHuntApp.xcworkspace",
      cobertura_xml: true,
      jenkins: true,
      scheme: "TreasureHuntApp",
      configuration: "Debug",
      #html: true,
      #build_directory: "./build",
      output_directory: "./sonar-reports"
    )
    
    # Run swiftlint to detect code smells (you might need to specify the executable path
  	swiftlint(
  		output_file: 'sonar-reports/swiftlint.txt',
   		config_file: 'fastlane/.swiftlint.yml', 
      ignore_exit_status: true
    )
  
    # Run lizard to check code complexity
    lizard(source_folder: 'TreasureHuntApp',
      export_type: 'xml',
      report_file: 'sonar-reports/lizard-report.xml')
    
    # Run sonar
    sonar
  end
  
  desc "Build the application. Configure options in fastlane/Gymfile"
  lane :beta do
    increment_build_number
    gym(scheme: "TreasureHuntApp")
  end
  
  desc "Test and build the application"
  lane :test_build_app do
    scan
    gym(scheme: "TreasureHuntApp")
  end
  
end
